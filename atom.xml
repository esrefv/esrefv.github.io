<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Viduslu]]></title>
  <link href="http://esrefv.github.io/atom.xml" rel="self"/>
  <link href="http://esrefv.github.io/"/>
  <updated>2016-11-08T10:11:26+03:00</updated>
  <id>http://esrefv.github.io/</id>
  <author>
    <name><![CDATA[E. VIDUSLU]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby ile Github-Bitbucket Arasında Çift Yönlü Repository Aktarımı Yapan Script]]></title>
    <link href="http://esrefv.github.io/blog/2016/11/05/ruby-ile-github-bitbucket-arasinda-cift-yonlu-reposityory-aktarimi-yapan-script/"/>
    <updated>2016-11-05T19:00:59+03:00</updated>
    <id>http://esrefv.github.io/blog/2016/11/05/ruby-ile-github-bitbucket-arasinda-cift-yonlu-reposityory-aktarimi-yapan-script</id>
    <content type="html"><![CDATA[<p>Öncelikle başlık biraz uzun oldu arkadaşlar kusura bakmayın :D İlk olarak benden Bitbucket üzerinde bulunan projelerinin Github'a aktarma işlemi için bir script yazmam istendiğinde nasıl yapacağım konusunda en ufak bir fikrim yoktu ve ruby dünyasında çok yeniyim.</p>

<!-- more -->


<p>Sonrasında burada da yazağım gibi adım adım ilerleyerek mükemmel olmasada kullanılabilir bir script ortaya çıkartmaya çalıştım. Kodu bu yazıyı yazmadan önce bitirmiş olduğumdan elimden geldiğince iyileştirme yapmaya çalıştım fakat biraz daha temizlenip düzenlenebileceğine inanıyorum. Umarım işinizi görür.</p>

<h1>Var olan repositorylerimizin, taşınacak alandaki remoteların listelenmesi</h1>

<p>directoryname adını verdiğim bir değişkende oluşturulacak olan klasörün adını tutacağım ve rubyde &lsquo;Dir&rsquo; sınıfını kullanacağız.</p>

<pre><code>directoryname = "bitbucketproject"
Dir.mkdir(directoryname) unless File.exists?(directoryname)
</code></pre>

<p>Dir.mkdir sayesinde &ldquo;bitbucketproject&rdquo; adında klasörümüz oluşuyor. Ben ubuntu kulladığım için &lsquo;home&rsquo; klasörü altında oluşuyor.</p>

<p>Klonlayacağımız repolarımızı ve taşıyacağımız alandaki repositorylere ait remotelar repo_remote_list adını verdiğimiz array içinde tutuyoruz.</p>

<pre><code>repo_list = 
[["git clone git@github.com:github/example1.git", "git clone git@github.com:github/example1.git"],
["git clone git@bitbucket.org:bitbucket/example2.git","git clone git@bitbucket.org:bitbucket/example2.git"]]
</code></pre>

<p>Örnek olarak verdiğim listede terminal üzerinde nasıl clone işlemi yapıyorsak o şekilde yazıyoruz taşımak istediğimiz repoları, taşıyacağımız alana ait remoteları da ikili liste şeklinde hangi repomuzu hangi &lsquo;remote&rsquo; a taşımak istiyorsak yanına belirtiyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">directoryname</span> <span class="o">=</span> <span class="s2">&quot;bitbucketproject&quot;</span>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">directoryname</span><span class="p">)</span> <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">exists?</span><span class="p">(</span><span class="n">directoryname</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">repo_remote_list</span> <span class="o">=</span>
</span><span class='line'><span class="o">[</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@github.com:github/example1.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@bitbucket.org:bitbucket/example1.git&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@bitbucket.org:bitbucket/example2.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@github.com:github/example2.git&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@bitbucket.org:bitbucket/example3.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@github.com:github/example3.git&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@github.com:github/example4.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@bitbucket.org:bitbucket/example4.git&quot;</span><span class="o">]</span><span class="p">,</span>   
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@bitbucket.org:bitbucket/example5.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@github.com:github/example5.git&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;git clone git@github.com:github/example6.git&quot;</span><span class="p">,</span> <span class="s2">&quot;git remote add origin git@bitbucket.org:bitbucket/example6.git&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Genel olarak kodumuz bu şekildedir.</p>

<h1>Var olan repositorylerimize &lsquo;mirror&rsquo; eklenmesi ve klasör içine klonlama işlemi</h1>

<p>Bu aşamada &lsquo;mirror&rsquo; işlemi bize, yeni alana taşıyacağımız repositorylerimizin tüm branchleri ile taşımıza yardımcı olacak olan büyülü bir kelime.(Bende yeni öğrendim ve kullanıyorum :D)</p>

<p>Bunun kullanılma şekli klon aşamasında kodumuz şu şekilde olmalı,</p>

<pre><code>"git clone --mirror git@github.com:github/example1.git"
</code></pre>

<p>fakat ben kullanıcının bunu yazarak zaman kaybetmesini istemediğim için kullanıcı sadece clone repoyu ve remote repoyu yazacak gerisini biz halledeceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">repo_count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">repo_remote_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">repo</span><span class="o">|</span>
</span><span class='line'>  <span class="n">repo_first</span> <span class="o">=</span> <span class="n">repo</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">rpartition</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; --mirror &quot;</span>
</span><span class='line'>  <span class="n">repo_last</span>  <span class="o">=</span> <span class="n">repo</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">rpartition</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'>  <span class="n">repo_remote_list</span><span class="o">[</span><span class="n">repo_count</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">repo_first</span> <span class="o">+</span> <span class="n">repo_last</span>
</span><span class='line'>  <span class="n">repo_count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Onun içinde bu şekilde bir kod yazıyoruz. Bu &lsquo;rpartition(&rsquo; &lsquo;) kodu,</p>

<pre><code>'git clone'  
'git@github.com:github/example1.git' 
</code></pre>

<p>şeklinde klonalanacak olan repomuzu ikiye bölüyor. Bizim ise ilk bölümün yanına &ldquo; &ndash;mirror &rdquo; büyülü sözcüğünü eklemek. Bu işlemide yaparak repo_remote_list imizi yenilemiş oluyoruz. Şimdide klonlayalım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">repo_remote_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">repo</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="n">directoryname</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>      <span class="nb">system</span> <span class="n">repo</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> 
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Yeni remote ları eklemek için klonlanan dosyaları listeleme</h1>

<p>Bu işlemin yapıla bilmesi için tek tek klasörlerin içerisine girilerek &lsquo;git&rsquo; kodu çalıştırılması gerekiyor. &lsquo;directoryname&rsquo; içerisinde bulunan tüm dosyaları listeleyen bir &lsquo;Dir&rsquo; kodu var.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files</span> <span class="o">=</span> <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">directoryname</span> <span class="o">+</span> <span class="s2">&quot;/*&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">files_change</span> <span class="o">=</span> <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">directoryname</span> <span class="o">+</span> <span class="s2">&quot;/*&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>&lsquo;Dir&rsquo; glob belirttiğimiz path içerisindeki dosyaları listeliyor bize. Fakat listeleme tarzı &lsquo;direcktoryname/filename&rsquo; bizde => &lsquo;bitbucketproject/example1&rsquo; şeklinde olduğu için tek tek içerisini gezme açısında güzel, ayrıca bize sadece dosya adı olan &lsquo;example1&rsquo; de lazım olduğundan neden iki tane kullanıyoruz diye düşünebilirsiniz, sıra onda :)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files_change</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file_change</span><span class="o">|</span>
</span><span class='line'>  <span class="n">file_change</span><span class="o">.</span><span class="n">slice!</span> <span class="n">directoryname</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu kod sayesinde files_change içerisinde sadece klasör isimlerini tutuyoruz. Yaptığı işlem ise &lsquo;bitbucketproject/example1&rsquo; şeklinde olan listedeki verilerin önünden &lsquo;bitbucketproject/&rsquo; ı siliyor ve bize sadece klasör isimlerini bırakıyor.</p>

<h1>Yeni bir remote listesi oluşturma zorunluluğu</h1>

<p>Genel olarak tekli ve ikili olarak test ettiğim bu scriptte çoğul bir deneme yaptığımda klonlanan reponun klasör isminin baş harfine göre bir sapma yaşanıyor ve klonlanan repo başka bir repoya pushlanabiliyordu.</p>

<p>Fakat merak etmeyin kullanıcı sadece repo_remote_list i sırayla girdikten sonra başka bir işlem yapmasına gerek kalmadan biz sıralamayı kodla halledeceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">new_repo_remote_list</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">new_repo_count</span> <span class="o">=</span> <span class="mi">0</span>  
</span><span class='line'><span class="n">files_change</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fileschange</span><span class="o">|</span>
</span><span class='line'>  <span class="n">repo_remote_list</span><span class="o">.</span><span class="n">each</span>  <span class="k">do</span> <span class="o">|</span><span class="n">repolist</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">repolist</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">include?</span> <span class="n">fileschange</span>
</span><span class='line'>          <span class="n">new_repo_remote_list</span><span class="o">[</span><span class="n">new_repo_count</span><span class="o">]</span> <span class="o">=</span>  <span class="n">repolist</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>          <span class="n">new_repo_count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kodumuz bu şekilde. Nasıl çalıştığına gelirsek. files_change bizim &lsquo;example1&rsquo; şeklinde tuttuğumuz klonlanan repolarımızın dosya adı listesi. Ve files_change klasörlerimizi okuduğu sıralamayla bize dosya adı listesi yaratıyor. Bu önemli!! repo_remote_list &lsquo;repolist[0]&rsquo; klonlanacak olan repolarımızın sıralı listesi.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files_change</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fileschange</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu blokta klasörlerin okunduğu sırada dosyaları gezeceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files_change</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fileschange</span><span class="o">|</span>
</span><span class='line'>  <span class="n">repo_remote_list</span><span class="o">.</span><span class="n">each</span>  <span class="k">do</span> <span class="o">|</span><span class="n">repolist</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">repolist</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">include?</span> <span class="n">fileschange</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>repolist[0]  ise ilk sırada klonlamak istediğimiz sırada girdiğimiz repository listemiz ve bunları gezeceğiz. Neden mi? Çünkü bu sıra bizim taşıyacağımız yer için kullacağımız &lsquo;remote&rsquo; lar ile aynı olan sıra ve taşıyacağınız yerin repository adı aynı olmak zorunda değil.</p>

<p>repolist[0] in ilk sırasında &ldquo;github/example1.git&rdquo; var bu klonladığımız repository. Klasörümüzün adı ise example1 , repolist[1] imizde ise ilk sırada &ldquo;bitbucket/example1.git&rdquo; var buda yeni göndereceğimiz repository.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files_change</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fileschange</span><span class="o">|</span>
</span><span class='line'>  <span class="n">repo_remote_list</span><span class="o">.</span><span class="n">each</span>  <span class="k">do</span> <span class="o">|</span><span class="n">repolist</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">repolist</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">include?</span> <span class="n">fileschange</span>
</span><span class='line'>          <span class="n">new_repo_remote_list</span><span class="o">[</span><span class="n">new_repo_count</span><span class="o">]</span> <span class="o">=</span>  <span class="n">repolist</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>          <span class="n">new_repo_count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Belirttiğim gibi klon aşamasında klasör isimlerine göre sıralama değişiyor. if koşulu -> repolist[0] in ilk sırasındaki veride &ldquo;files_change&rdquo; klasör adı geçiyormu diye bakıyoruz. Eğer geçiyorsa new_repo_remote_list[new_repo_count] dan başlayarak eşleşmeleri içerisine ekle.</p>

<p>Ve sonunda new_remote_list olarak adlandırdığımız okunan klasör sırasına göre yeni bir remote listemiz oluştu.</p>

<p>Örnek ;</p>

<pre><code>repo_list = 
["git clone git@github.com:github/example1.git", ...]
fileschange = "example1"

"git clone git@github.com:github/example1.git" içerisinde "example1" geçiyormu?
</code></pre>

<p>Şeklinde files_change okunan dosyaların listesi olduğu için ilk sırada &lsquo;example4&rsquo; te olabilirdi.</p>

<h1>Yeni remote ları repolarımıza ekleyelim</h1>

<p>Biz projelerimizi tüm commitleri ve varsa tüm brachleri ile pushlamayı istiyoruz. Klonlanan projelerin &lsquo;origin remote&rsquo; ları klonlanan yer neresi ise orası kalıyor. Biz onuda silmeden origin_two isminde yeni bir remote ekleyeceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">new_repo_remote_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">new_remote</span><span class="o">|</span>   
</span><span class='line'>  <span class="n">new_remote</span><span class="o">.</span><span class="n">gsub!</span> <span class="s1">&#39;origin&#39;</span><span class="p">,</span> <span class="s1">&#39;origin_two&#39;</span> 
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Remote listemizi &lsquo;origin_two&rsquo; olacak şekilde düzenliyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remote_count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">files</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="k">do</span>            
</span><span class='line'>      <span class="n">remote</span> <span class="o">=</span> <span class="n">new_repo_remote_list</span><span class="o">[</span><span class="n">remote_count</span><span class="o">]</span>                       
</span><span class='line'>      <span class="nb">system</span> <span class="s1">&#39;git remote -v&#39;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="n">remote</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s1">&#39;git remote -v&#39;</span>                  
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">remote_count</span> <span class="o">+=</span><span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu kodda tek tek dosyalarımıza girerek &lsquo;git remote add origin_two &rsquo; kodunu çalıştıracak. &lsquo;git remote -v&rsquo; ise eklenmeden önceki ve sonraki halini ekrana basacak.</p>

<h1>Yeni repomuza pushluyoruz ve origin_two remote unu siliyoruz</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">files</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="k">do</span>            
</span><span class='line'>      <span class="nb">system</span> <span class="s1">&#39;git push --all origin_two&#39;</span>              
</span><span class='line'>  <span class="k">end</span>      
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">remote_remove</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">files</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">remote</span> <span class="o">=</span> <span class="n">new_repo_remote_list</span><span class="o">[</span><span class="n">remote_remove</span><span class="o">]</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s1">&#39;git remote -v&#39;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s1">&#39;git remote remove origin_two&#39;</span>   
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="n">remote_remove</span> <span class="o">+=</span> <span class="mi">1</span>          
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu kodda ilk döngüde o anda var olan tüm branchleri pushluyoruz.</p>

<p>İkinci döngüde ise &lsquo;git remote remove&rsquo; ile origin_two remoteumuzu kaldırıyoruz. Aslında kaldırmamızı gerektiren bir durum yok isterseniz kaldırmaya bilirsiniz.</p>

<p>Elimden geldiğince açıklamaları ile anlatmaya çalıştım. Yazı biraz fazla uzun oldu başlık gibi :D Okuduğunuz için teşekkürler.</p>

<p>Tam koda <a href="https://gist.github.com/esrefv">buradan</a> ulaşabilirsiniz adı ise &ldquo;reposync.rb&rdquo; direk kodun sayfasını veremiyorum çünkü istenen bir değişiklik yada güncelleme olduğunda burada sayfayı güncellemem gerekiyor bu şekilde daha kolay ulaşabilirsiniz. İyi günler.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails counter_cache Kullanımı]]></title>
    <link href="http://esrefv.github.io/blog/2016/10/10/rails-counter-cache-kullanimi/"/>
    <updated>2016-10-10T22:47:50+03:00</updated>
    <id>http://esrefv.github.io/blog/2016/10/10/rails-counter-cache-kullanimi</id>
    <content type="html"><![CDATA[<p>Bugünkü yazımda Rails'ta counter_cache kullanımından bahsedeceğim. Öncelikle belli bir sayısal değeri kullanmamıza ihtiyaç varsa her seferinde count ile saydırmak yerine bunu counter_cache yardımı ile tutturabileceğiz.</p>

<p>Kendi yaptığım proje üzerinden örnek vermem gerekirse. User ve Answer adında 2 modelim var. counter_cache kullanabilmemiz için 2 modelimizin arasında has_many, belongs_to ilişkisi olması gereklidir.</p>

<!-- more -->


<p>User modelim;</p>

<pre><code>class User &lt; ActiveRecord::Base
    has_many :answers
end
</code></pre>

<p>Answer modelim;</p>

<pre><code>class Answer &lt; ActiveRecord::Base
    belongs_to :user
end
</code></pre>

<p>şeklindedir.</p>

<p>Benim User'larımın birden çok Answer'ı olabilir. Answer içerindede User'ın online olup olmama durumunu, online offline olduğu saati ve buna benzer cevapları tutmaktayım.</p>

<p>Benim User'ıma ait cevapların sayınsını öğrenmem için</p>

<pre><code>@user.answers.count
@user.answers.size
@user.answer.lenght 
</code></pre>

<p>şeklinde veritabanını yoracak COUNT(*) sorguları yerine daha efektif bir çözüm olan counter_cache kullanmam daha doğru olacaktır.</p>

<p>Öncelikle Answer modelimizdeki user'ı,</p>

<pre><code>class Answer &lt; ActiveRecord::Base
    belongs_to :user, counter_cache: true
end
</code></pre>

<p>şeklinde counter_cache: true yapıyoruz.</p>

<p>Burada belongs_to modelimeze counter_cache: true demiş olmamıza rağmen, User modelimize yeni bir alan eklemek için migration oluşturmamız gerekiyor.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g migration add_answers_sount_to_users
</span></code></pre></td></tr></table></div></figure>


<p>Benim örneğimde görebileceğiniz gibi User modelimize answers_count eklememiz gerekiyor.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddAnswersCountToUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:answers_count</span><span class="p">,</span> <span class="ss">:integer</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Daha sonra yeni oluşturduğumuz migration ımızı migrate etmeliyiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<p>Ve tamamdır. Her oluşacak yeni Answer'ımız hangi User'ımıza ait ise onun değerini 1 arttırıyor olacaktır. Bizde veritabanımızı yoracak COUNT(*) işlemi yerine.</p>

<pre><code>@user.answers_count
</code></pre>

<p>yazarak, model tarafından birek ulaşabileceğiz.</p>

<p>Okuduğunuz için teşekkürler</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Kurulumu Nasıl Yapılır ve Nasıl Github Pages Deploy Edilir?]]></title>
    <link href="http://esrefv.github.io/blog/2016/10/03/octopress-kurulumu-nasil-yapilir-ve-nasil-github-pages-deploy-edilir/"/>
    <updated>2016-10-03T10:32:01+03:00</updated>
    <id>http://esrefv.github.io/blog/2016/10/03/octopress-kurulumu-nasil-yapilir-ve-nasil-github-pages-deploy-edilir</id>
    <content type="html"><![CDATA[<p>Octopress statik bir site yönetimi sağlayan blog framework üdür. Terminalden yönettiğimiz blogumuzu Github pages deploy ederek aktif hale getirceğiz yazımda. Öncelikle &ldquo;Octopress&rdquo; i klonlamamız gerekiyor.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p><strong>Rake install</strong></p>

<p>Sırada ise default tema ve postlarımız için gerekli olan klasörleri bize sağlayacak olan kodu çalıştıracağız.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake install
</span></code></pre></td></tr></table></div></figure>


<p>Eğer aşağıdaki gibi bir hata alırsak;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake aborted!
</span><span class='line'>Gem::LoadError: ...
</span></code></pre></td></tr></table></div></figure>


<p>&ldquo;rake install&rdquo; örneğindeki gibi &ldquo;rake&rdquo;  yazarak kullanacağımız bütün işlemlerin başına &ldquo;bundle exec&rdquo; yazmamız gerekecektir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install
</span></code></pre></td></tr></table></div></figure>


<p><strong>İlk Postumuzu oluşturalım</strong></p>

<p>Post oluşturmak için aşağıdaki kodu yazıyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake new_post
</span><span class='line'>Enter a title <span class="k">for</span> your post: Deneme
</span></code></pre></td></tr></table></div></figure>


<p>Postumuzun adı için birşeyler yazıyoruz ve ilk postumuzu oluşturmuş oluyoruz. Ben &ldquo;Deneme&rdquo; adında bir post oluşturdum.</p>

<p>Bu ilk postumuz source klasörünün altında bulunan _posts klasörünün içinde bulunuyor ve <a href="https://daringfireball.net/projects/markdown/syntax">Markdown</a> syntax ile yazılması gerekiyor.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd source</span>/_posts
</span></code></pre></td></tr></table></div></figure>


<p>yazarak postlarımıza ulaşıyoruz. Subl, atom, rubymine vb. araçlarla açarak yönetebiliriz postumuzu.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: <span class="s2">&quot;Deneme&quot;</span>
</span><span class='line'>date: 2016-10-03 09:26:18 +0300
</span><span class='line'>comments: <span class="nb">true</span>
</span><span class='line'>categories:
</span><span class='line'>---
</span></code></pre></td></tr></table></div></figure>


<p>Karşımıza bu şekilde başlayan bir sayfa açılacaktır. Bunun altına Markdown syntax ile yazdığımız yazımızı ekleyerek paylaşabiliyor olacağız.</p>

<p>Kategori aşamasını da aşağıda şekilde yazarak oluşturabiliyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>categories: <span class="o">[</span>octopress, github, github pages<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Sitemizi &ldquo;Generate&rdquo; Edelim</strong></p>

<p>Yaptığımız değişikliklerden sonra <em>generate</em> komutunu çalıştırmalıyız ki değişiklikler oluşturulsun.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake generate
</span><span class='line'><span class="c">## Generating Site with Jekyll</span>
</span><span class='line'>directory <span class="nb">source</span>/stylesheets
</span><span class='line'>    write <span class="nb">source</span>/stylesheets/screen.css
</span><span class='line'>Configuration file: /home/esref/Documents/octopress/_config.yml
</span><span class='line'>            Source: <span class="nb">source</span>
</span><span class='line'><span class="nb">       </span>Destination: public
</span><span class='line'>      Generating...
</span><span class='line'>                    <span class="k">done</span>.
</span></code></pre></td></tr></table></div></figure>


<p><strong>Sitemizi Önizleme Şeklinde Görüntüleyelim</strong></p>

<p>Oluşturduğumuz sitemizi local olarak görüntüleyebileceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake preview
</span><span class='line'>Starting to watch <span class="nb">source </span>with Jekyll and Compass. Starting Rack on port 4000
</span><span class='line'>Configuration file: /home/esref/Documents/octopress/_config.yml
</span><span class='line'>&gt;&gt;&gt; Compass is watching <span class="k">for</span> changes. Press Ctrl-C to Stop.
</span><span class='line'>            Source: <span class="nb">source</span>
</span><span class='line'><span class="nb">       </span>Destination: public
</span><span class='line'>      Generating...
</span><span class='line'><span class="o">[</span>2016-10-03 09:45:32<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2016-10-03 09:45:32<span class="o">]</span> INFO  ruby 2.3.0 <span class="o">(</span>2015-12-25<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2016-10-03 09:45:32<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span><span class="m">20926</span> <span class="nv">port</span><span class="o">=</span>4000
</span><span class='line'>                    <span class="k">done</span>.
</span><span class='line'> Auto-regeneration: enabled <span class="k">for</span> <span class="s1">&#39;source&#39;</span>
</span><span class='line'>    write public/stylesheets/screen.css
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://localhost:4000/">http://localhost:4000/</a> sayfasında sitemizi görütüleyebiliriz. Sitemiz aşağıdaki şekildi görüntülene bilecektir.</p>

<p><img src="http://i.hizliresim.com/yV9Eoy.png" alt="Örnek Resim" /></p>

<p><strong>Octopress'in Yapılandırılması(Configuring)</strong></p>

<p>Site adı, açıklama vb. bir çok değişikliği ve ayarları yapabileceğiniz dosya &ldquo;_config.yml&rdquo; dosyasıdır. Bu dosyaya da subl, atom vb. şekilde açtığınız klasörlerin kök dizininden ulaşabilirsiniz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ----------------------- #</span>
</span><span class='line'><span class="c">#      Main Configs       #</span>
</span><span class='line'><span class="c"># ----------------------- #</span>
</span><span class='line'>
</span><span class='line'>url: http://deneme.github.io
</span><span class='line'>title: My Octopress Blog
</span><span class='line'>subtitle: A blogging framework <span class="k">for</span> hackers.
</span><span class='line'>author: Your Name
</span><span class='line'>simple_search: https://www.google.com/search
</span><span class='line'>description:
</span></code></pre></td></tr></table></div></figure>


<p>Dosyaya ulaştığımızda öncelikle değiştirmemiz gereken url: kısmıdır çünkü repository mize hangi adı verdiysek o şekilde olmalıdır. Nasıl
repository oluşturcağımızıda aşağıda anlatıyorum.</p>

<p><strong>Sitemizi Github'a Deploy Etme</strong></p>

<p>Yeni bir github repository oluşturmalıyız. Kişisel blogunuzu oluşturuyorsanız benim gibi aşağıdaki şekilde repo ismi verebilirsiniz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>esrefv.github.io
</span></code></pre></td></tr></table></div></figure>


<p>Sonrasında &ldquo;rake setup_github_pages&rdquo; çalıştırıyoruz,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake setup_github_pages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for</span> your repository
</span><span class='line'><span class="o">(</span>For example, <span class="s1">&#39;git@github.com:your_username/your_username.github.io.git)</span>
</span><span class='line'><span class="s1">           or &#39;</span>https://github.com/your_username/your_username.github.io<span class="err">&#39;</span><span class="o">)</span>
</span><span class='line'>Repository url:
</span></code></pre></td></tr></table></div></figure>


<p>Örnek olarak belirttiği şekilde &ldquo;git@github.com:username/username.github.com.git&rdquo; kendi repo umuzu yazıyoruz.</p>

<p>Son olarak aşağıdaki kodları sırasıyla çalıştırarak blogumuzu Github'a deploy işlemimizi bitirmiş oluyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake generate
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;First deploy to github.&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>Okuduğunuz için teşekkür ederim.</p>

<p>Kaynak Siteler;</p>

<p><a href="http://octopress.org/">http://octopress.org/</a>
<a href="https://daringfireball.net/projects/markdown/syntax">https://daringfireball.net/projects/markdown/syntax</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cybele Kurulumu Nasıl Yapılır?]]></title>
    <link href="http://esrefv.github.io/blog/2016/09/26/cybele-kurulumu-nasil-yapilir/"/>
    <updated>2016-09-26T11:06:43+03:00</updated>
    <id>http://esrefv.github.io/blog/2016/09/26/cybele-kurulumu-nasil-yapilir</id>
    <content type="html"><![CDATA[<p>Cybele &ldquo;Ruby on Rails&rdquo; dünyasına yeni başlayanlar için(biride benim) çok kolay proje oluşturma ve user-admin arayüzleri sayesinde her şeyi daha rahat yönetebilmemize olanak sağlayan bir şablondur.</p>

<p>Kurulum aşamasından önce gerekli olan en düşük versiyon tipleri;</p>

<blockquote><p>Ruby  ~> 2.3</p>

<p>Rails ~> 4.2 &lsquo;dir.</p></blockquote>

<p>Eğer daha düşük bir versiyon kullanmaktaysanız öncelikle güncelleme yapmalısınız.</p>

<!-- more -->


<p>Öncelikle &ldquo;Cybele&rdquo; gem imizi indirmekle başlayalım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install cybele
</span></code></pre></td></tr></table></div></figure>


<p>Daha sonra ise indirdiğimiz &ldquo;Cybele&rdquo; ile proje oluşturmak için terminalimize</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cybele project_name
</span></code></pre></td></tr></table></div></figure>


<p>project_name yerine istediğimiz bir proje adını kullanabiliriz. Ben bu anlatımım sırasında adını &ldquo;cybele_test&rdquo; olarak kullanacağım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cybele cybele_test
</span></code></pre></td></tr></table></div></figure>


<p>diyerek projemizi oluşturmuş oluyoruz. Fakat öncelikle halletmemiz gereken bir kaç düzenleme daha var.</p>

<p>Oluşturduğumuz projemizin dizinine girerek rubymine, atom yada subl vb. ne kullanıyorsanız onunla projemizi açıyoruz.</p>

<p>cybele_test projemizin altında <strong>db/migrate</strong> klasörünün içerisinde bulunan <strong>devise_create_user</strong> ve <strong>devise_create_admin</strong> dosyalarında değiştirmemiz gereken alanlar bulunmakta.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:is_active</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:time_zone</span>
</span></code></pre></td></tr></table></div></figure>


<p>Her iki dosyanın içerisinde de yukarıdaki gibi bulunan <strong>is_active</strong> ve <strong>time_zone</strong> satırlarının,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:is_active</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:time_zone</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s2">&quot;UTC&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bu şekilde default değerlerini ayarlıyoruz.</p>

<p>Projemizin içerisindeki public klasörüne,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>public
</span></code></pre></td></tr></table></div></figure>


<p>yazarak ulaşıyoruz ve içerisinde aşağıdaki komutu çalıştırıyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ln -s ../VERSION.txt VERSION.txt
</span></code></pre></td></tr></table></div></figure>


<p>Bu işlemide gerçekleştirdiysek sırada veritabanı işlemlerimizi gerçekleştirmek kaldı.</p>

<p>Projemizin config klasörünün altındaki database.yml uzantılı dosyamızı açıyoruz. <strong>(config/database.yml)</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">default</span>
</span><span class='line'><span class="ss">adapter</span><span class="p">:</span> <span class="n">postgresql</span>
</span><span class='line'><span class="ss">database</span><span class="p">:</span> <span class="n">cybele_test_development</span>
</span><span class='line'><span class="ss">encoding</span><span class="p">:</span> <span class="n">utf8</span>
</span><span class='line'><span class="ss">min_messages</span><span class="p">:</span> <span class="n">warning</span>
</span><span class='line'><span class="ss">pool</span><span class="p">:</span> <span class="mi">5</span>
</span><span class='line'><span class="ss">timeout</span><span class="p">:</span> <span class="mi">5000</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="ss">port</span><span class="p">:</span> <span class="mi">5432</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yukarıdaki şekilde görünen development kısmımızın altına username ve password ekleyeceğiz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">default</span>
</span><span class='line'><span class="ss">adapter</span><span class="p">:</span> <span class="n">postgresql</span>
</span><span class='line'><span class="ss">database</span><span class="p">:</span> <span class="n">cybele_test_development</span>
</span><span class='line'><span class="ss">encoding</span><span class="p">:</span> <span class="n">utf8</span>
</span><span class='line'><span class="ss">min_messages</span><span class="p">:</span> <span class="n">warning</span>
</span><span class='line'><span class="ss">pool</span><span class="p">:</span> <span class="mi">5</span>
</span><span class='line'><span class="ss">timeout</span><span class="p">:</span> <span class="mi">5000</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="ss">port</span><span class="p">:</span> <span class="mi">5432</span>
</span><span class='line'><span class="ss">username</span><span class="p">:</span> <span class="n">cybele_test</span>
</span><span class='line'><span class="ss">password</span><span class="p">:</span> <span class="n">cybele_test</span>
</span></code></pre></td></tr></table></div></figure>


<p>Postgresql'de bu klasörde gördüğümüz şekilde database isminin aynısını oluşturarak üzerine username ve password tanımlamam gerekiyor. Bunun için öncelikle;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo -u postgres psql
</span></code></pre></td></tr></table></div></figure>


<p>kullanarak postgresql terminalini açıyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>CREATE DATABASE ‘cybele_test_development’<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yazarak veri tabanımızı oluşturuyoruz. database.yml dosyamızda database ismimiz nasılsa öyle yazmamız gerekiyor.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>CREATE USER cybele_test PASSWORD <span class="s1">&#39;cybele_test&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>database.yml dosyamızda belirttiğimiz şekilde username ve password ümüzü tanımlıyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ALTER USER cybele_test WITH SUPERUSER<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>yazarak veri tabanı işlemlerimizi bitirmiş oluyoruz.</p>

<p>Son olarak yapmamız gereken ise aşağıdaki kodları sırasıyla terminalde çalıştırmak,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:create
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span><span class='line'><span class="nv">$ </span>budnle <span class="nb">exec </span>rake dev:seed
</span></code></pre></td></tr></table></div></figure>


<p>ve</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails s
</span></code></pre></td></tr></table></div></figure>


<p>yazarak projemizi çalıştırmış oluyoruz. <a href="http://localhost:3000/">http://localhost:3000/</a> e giderek projemizin çalışan halini görebiliriz.</p>

<p>Başlangıçta belirttiğim gibi bir tanede Admin sayfamız bulunmakta. Admin olarak giriş yapmak için ise <a href="http://localhost:3000/hq">http://localhost:3000/hq</a> sayfasına gitmeniz gerekiyor.</p>

<p>Adminin e-posta ve parolası <strong>db/seeds.rb</strong> dosyasında yazıyor olacaktır.</p>

<p>Okuduğunuz için teşekkürler.</p>
]]></content>
  </entry>
  
</feed>
